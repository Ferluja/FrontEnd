{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./cronometro/cronometro.component\";\n//se exporta la clase del componente padre para ser utilizada en otros modulos\nexport class AppComponent {\n  constructor() {\n    //se declara una variable publica de tipo string que se inicializa como cadena vacia\n    this.mensaje = '';\n  }\n  //se declara un metodo publico que obtiene un parametro llamado tiempo de tipo numerico y no devuelve nada\n  actualizar(tiempo) {\n    //se le asigna a mensaje el valor de tiempo mas la concatenacion de una cadena que indica que la actualización ocurre cada 10 segundos.\n    this.mensaje = tiempo + '(se actualiza cada 10 segundos)';\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 8,\n  vars: 2,\n  consts: [[2, \"text-align\", \"center\"], [3, \"inicio\", \"multiplo10\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Prueba del componente cronometro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"app-cronometro\", 1);\n      i0.ɵɵlistener(\"multiplo10\", function AppComponent_Template_app_cronometro_multiplo10_3_listener($event) {\n        return ctx.actualizar($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"h2\");\n      i0.ɵɵtext(5, \"Evento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"h3\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"inicio\", 15);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.mensaje);\n    }\n  },\n  dependencies: [i1.CronometroComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAQA;AACA,OAAM,MAAOA,YAAY;EAPzBC;IAQE;IACO,YAAO,GAAY,EAAE;;EAC5B;EACOC,UAAU,CAACC,MAAc;IAC9B;IACA,IAAI,CAACC,OAAO,GAAGD,MAAM,GAAG,iCAAiC;EAC3D;;AAPWH,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTzBC,8BAAiC;MAC3BA,gDAAgC;MAAAA,iBAAK;MAKzCA,yCAAgE;MAAlCA;QAAA,OAAcC,sBAAkB;MAAA,EAAC;MAACD,iBAAiB;MACjFA,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MAEfA,0BAAI;MAAAA,YAAW;MAAAA,iBAAK;;;MAHJA,eAAa;MAAbA,2BAAa;MAGzBA,eAAW;MAAXA,iCAAW","names":["AppComponent","constructor","actualizar","tiempo","mensaje","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\projects\\yoosva\\cronometroPractica\\src\\app\\app.component.ts","C:\\xampp\\htdocs\\projects\\yoosva\\cronometroPractica\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\n//se exporta la clase del componente padre para ser utilizada en otros modulos\r\nexport class AppComponent {\r\n  //se declara una variable publica de tipo string que se inicializa como cadena vacia\r\n  public mensaje : string = '';\r\n  //se declara un metodo publico que obtiene un parametro llamado tiempo de tipo numerico y no devuelve nada\r\n  public actualizar(tiempo: number) : void{\r\n    //se le asigna a mensaje el valor de tiempo mas la concatenacion de una cadena que indica que la actualización ocurre cada 10 segundos.\r\n    this.mensaje = tiempo + '(se actualiza cada 10 segundos)';\r\n  }\r\n}\r\n","<div style=\"text-align: center;\">\r\n  <h1>Prueba del componente cronometro</h1>\r\n  <!-- Se agrega el componente cronometro con dos atributos y se le asignan valores específicos a ambos. -->\r\n  <!-- Inicio: Indica que el cronometro comenzará en 15 segundos -->\r\n  <!-- multiplo10: regristra un evento que se produce cada vez que el cronómetro alcanza los 10 segundos. \r\n  si esto sucede, llama al método actualizar y se pasa el evento ($event) como argumento. -->\r\n  <app-cronometro [inicio]=\"15\" (multiplo10)=\"actualizar($event)\"></app-cronometro>\r\n  <h2>Evento</h2>\r\n  <!-- muestra el valor de la variable mensaje (tiempo de multipolos de 10 y la cadena)-->\r\n  <h3>{{mensaje}}</h3>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}